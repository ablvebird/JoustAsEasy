/**
 * build.gradle
 *
 * This is the Gradle build configuration file for a Java project that uses:
 * - Hibernate ORM with Jakarta Persistence API for object-relational mapping.
 * - H2 as the in-memory database.
 * - Log4j for logging.
 * - JUnit for testing.
 *
 * Key plugins and dependencies:
 * - JUnit Jupiter for unit testing.
 * - Hibernate for ORM (version 6.6.1).
 * - H2 as the lightweight in-memory database.
 * - Log4j for application logging.
 */

plugins {
    // Apply the Java plugin for compiling Java code.
    id 'java'
}

group = 'org.app' // The package group of the project.
version = '1.0-SNAPSHOT' // Version number of the project, used for snapshots.

repositories {
    // Use Maven Central repository to download dependencies.
    mavenCentral()
}

dependencies {
    // JUnit 5 (Jupiter) for writing and running tests.
    implementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    // Hibernate Core ORM library for mapping Java classes to database tables.
    implementation 'org.hibernate.orm:hibernate-core:6.6.1.Final'
    // Hibernate Validator for enforcing constraints on object fields.
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    // Jakarta Expression Language API for evaluating dynamic expressions.
    implementation 'jakarta.el:jakarta.el-api:6.0.1'
    // Jakarta Persistence API for ORM, providing entity management and queries.
    implementation 'jakarta.persistence:jakarta.persistence-api:3.2.0'

    // Log4j 2 for logging application output.
    implementation 'org.apache.logging.log4j:log4j-core:2.24.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.0'

    // H2 database dependency, which is a lightweight, in-memory, or file-based database.
    runtimeOnly 'com.h2database:h2:2.3.232'
}

test {
    // Configure Gradle to use JUnit Platform for running tests.
    useJUnitPlatform()
}
